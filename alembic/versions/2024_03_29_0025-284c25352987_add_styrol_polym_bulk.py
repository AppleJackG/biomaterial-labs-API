"""Add styrol polym. bulk

Revision ID: 284c25352987
Revises: 60adf164ab21
Create Date: 2024-03-29 00:25:08.117402

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '284c25352987'
down_revision: Union[str, None] = '60adf164ab21'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('styrol_polymerization_bulk',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('number', sa.Integer(), nullable=True),
    sa.Column('load_monomer_g', sa.Float(), nullable=True),
    sa.Column('load_monomer_mole', sa.Float(), nullable=True),
    sa.Column('load_monomer_mole_g', sa.Float(), nullable=True),
    sa.Column('load_initiator_g', sa.Float(), nullable=True),
    sa.Column('load_initiator_mole', sa.Float(), nullable=True),
    sa.Column('load_initiator_mole_g', sa.Float(), nullable=True),
    sa.Column('temperature', sa.Float(), nullable=True),
    sa.Column('time', sa.Float(), nullable=True),
    sa.Column('polymer_yield_g', sa.Float(), nullable=True),
    sa.Column('polymer_yield_percent', sa.Float(), nullable=True),
    sa.Column('polymerization_rate_percent', sa.Float(), nullable=True),
    sa.Column('polymerization_rate_mole', sa.Float(), nullable=True),
    sa.Column('polymer_characteristics_viscosity', sa.Float(), nullable=True),
    sa.Column('polymer_characteristics_mol_mass', sa.Float(), nullable=True),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_unique_constraint(None, 'user', ['user_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user', type_='unique')
    op.drop_table('styrol_polymerization_bulk')
    # ### end Alembic commands ###
